#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config external_bar                 off:45:0
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               on
yabai -m config window_shadow                on
yabai -m config window_opacity               on
#yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.85
yabai -m config window_border                on
#yabai -m config window_border_width          8
yabai -m config active_window_border_color 0xFF005300
yabai -m config normal_window_border_color 0x002E3440
yabai -m config insert_feedback_color 0xFFA3BE8C
yabai -m config split_ratio                  0.70
yabai -m config auto_balance                 on
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

#yabai -m config window_placement first_child


# Exclude some app
yabai -m rule --add title='Preferences' manage=off layer=above
yabai -m rule --add title='^(Opening)' manage=off layer=above
yabai -m rule --add title='Library' manage=off layer=above
yabai -m rule --add app='System Preferences' manage=off layer=above
yabai -m rule --add app='Finder' manage=off layer=above
yabai -m rule --add app='Spotify' manage=off layer=above
yabai -m rule --add app='Chrome' manage=float layer=above




# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  20
yabai -m config bottom_padding               20
yabai -m config left_padding                 20 
yabai -m config right_padding                20
yabai -m config window_gap                   10
yabai -m config window_topmost               off




yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-spaces-jsx\"'"

# if using multple displays, add an additional rule for "display_changed" event
yabai -m signal --add event=display_changed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-spaces-jsx\"'"

# add these rules to auto-update the "windows" widget
yabai -m signal --add event=window_focused \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_destroyed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=window_created \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"nibar-windows-jsx\"'"


echo "yabai configuration loaded.."
